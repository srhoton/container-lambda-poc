version: '2.1'
orbs: 
  aws-cli: circleci/aws-cli@4.1.0
  aws-ecr: circleci/aws-ecr@9.0.0
jobs:
  build-and-push-docker-image:
    parameters:
      image_tag:
        type: string
        default: "latest"
    machine: 
      image: ubuntu-2204:2023.07.2
    steps:
      - aws-ecr/build_and_push_image:
          account_id: ${AWS_ACCOUNT_ID}
          repo: "container-lambda-poc"
          tag: << parameters.image_tag >>
          profile_name: ecr-access
          dockerfile: Dockerfile
          path: application
          region: us-west-2
          auth:
            - aws-cli/setup:
                role_arn: ${AWS_OIDC_ROLE_ARN}
                region: us-west-2
                profile_name: ecr-access
  apply-feature:
    parameters:
      image_uri:
        type: string
        default: "874500785305.dkr.ecr.us-west-2.amazonaws.com/container-lambda-poc:l"
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: ${AWS_OIDC_ROLE_ARN}
          aws-region: us-west-2
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install Bash
          command: |
            apk update
            apk upgrade
            apk add bash
      - run:
          name: terraform init
          command: |
            cd application
            terraform init -input=false
            terraform workspace select ${TF_VAR_env_name}

workflows:
  on-merge-to-main:
    jobs:
      - build-and-push-docker-image: 
          requires: 
            - credential-setup
          context: Test
          filters:
            branches:
              only: main
  on-branch-created-or-updated:
    jobs:
      - build-and-push-docker-image: 
          requires: 
            - credential-setup
          image_tag: << pipeline.git.branch >>
          context: Dev
          filters:
            branches:
              ignore: main
      - apply-feature:
          requires:
            - build-and-push-docker-image
          image_uri: "foo"
          context: Dev
          filters:
            branches:
              ignore: main
  on-tag:
    jobs:
      - build-and-push-docker-image: 
          requires: 
            - credential-setup
          image_tag: << pipeline.git.tag >>
          context: Stage
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
